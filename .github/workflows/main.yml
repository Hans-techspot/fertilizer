name: "Manual Task Runner"  # removed emoji

on:
  workflow_dispatch:
    inputs:
      task_description:
        description: "Task Description (What do you want the agent to do?)"
        required: true
        type: string
      task_type:
        description: "Task Type"
        required: true
        type: choice
        options:
          - bug-fix
          - feature
          - refactor
          - documentation
          - testing
          - optimization
          - other
        default: feature
      branch_name:
        description: "Custom Branch Name (leave empty for auto-generated)"
        required: false
        type: string
      create_pr:
        description: "Create Pull Request?"
        required: true
        type: boolean
        default: true
      pr_draft:
        description: "Create as Draft PR?"
        required: true
        type: boolean
        default: true
      run_tests:
        description: "Run Tests Before Creating PR?"
        required: true
        type: boolean
        default: true
      target_branch:
        description: "Target Branch for PR"
        required: false
        type: string
        default: main
      additional_context:
        description: "Additional Context/Instructions (optional)"
        required: false
        type: string

jobs:
  execute-task:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: read

    steps:
      - name: Display Task Summary
        run: |
          echo "Task Type: ${{ github.event.inputs.task_type }}"
          echo "Target Branch: ${{ github.event.inputs.target_branch }}"
          echo "Create PR: ${{ github.event.inputs.create_pr }}"
          echo "Draft PR: ${{ github.event.inputs.pr_draft }}"
          echo "Run Tests: ${{ github.event.inputs.run_tests }}"
          echo "Task Description:"
          echo "${{ github.event.inputs.task_description }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.inputs.target_branch }}

      - name: Setup Git Identity
        run: |
          git config user.name "Copilot Agent[bot]"
          git config user.email "copilot-agent[bot]@users.noreply.github.com"

      - name: Install OpenCode CLI
        run: |
          curl -fsSL https://opencode.ai/install | bash
          echo "$HOME/.opencode/bin" >> $GITHUB_PATH

      - name: Configure Codestral
        run: |
          mkdir -p ~/.opencode
          API_KEY="${{ secrets.CODESTRAL_API_KEY }}"
          [ -z "$API_KEY" ] && API_KEY="DXfXAjwNIZcAv1ESKtoDwWZZF98lJxho"

          cat > ~/.opencode/config.yaml <<EOF
providers:
  codestral:
    name: "Codestral"
    module: "@ai-sdk/openai-compatible"
    options:
      baseURL: "https://codestral.mistral.ai/v1"
      apiKey: "${API_KEY}"
    models:
      agent:
        id: "codestral-2501"
        name: "Copilot Agent"
      fallback:
        id: "codestral-latest"
        name: "Fallback Agent"
defaultModel: "codestral/agent"
EOF

      - name: Generate Branch Name
        id: branch_name
        run: |
          if [ -n "${{ github.event.inputs.branch_name }}" ]; then
            BRANCH_NAME="${{ github.event.inputs.branch_name }}"
          else
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            SLUG=$(echo "${{ github.event.inputs.task_description }}" | head -c 30 | tr '[:upper:]' '[:lower:]' | tr -cs '[:alnum:]' '-' | sed 's/-$//')
            BRANCH_NAME="copilot/${{ github.event.inputs.task_type }}/$SLUG-$TIMESTAMP"
          fi
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Branch name: $BRANCH_NAME"
